@page "/spreadsheets"
@page "/"

@using Spreadsheet.Data.Dto
@using Spreadsheet.Providers
@using Spreadsheet.Services

@inject ISpreadsheetMetadataProvider _spreadsheetMetadataProvider
@inject ISpreadsheetMetadataService _spreadsheetMetadataService

@inject NavigationManager _uriHelper

<main class="container mt-3">

    <header class="row">
        <div class="col">
            <h1>Spreadsheets</h1>
        </div>
    </header>
    
    <section class="card mt-5 card-table">
        <div class="card-body">
            @if (_spreadsheets == null)
            {
                <p>
                    <em>Loading...</em>
                </p>
            }
            else
            {
                <NavLink class="btn btn-primary float-end" Match="NavLinkMatch.All" href="@("/create")">Create new spreadsheet</NavLink>

                <table class="table table-borderless mt-3">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Valid from</th>
                        <th>Valid to</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var spreadsheet in _spreadsheets)
                    {
                        <tr>
                            <td class="py-3">@spreadsheet.Name</td>
                            <td class="py-3">@spreadsheet.ValidFrom.ToShortDateString()</td>
                            <td class="py-3">
                                @if (spreadsheet.ValidTo != DateTime.MinValue)
                                {
                                    @spreadsheet.ValidTo.ToShortDateString()
                                }
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button @onclick="() => Details(spreadsheet.SpreadsheetId)" class="btn btn-primary me-3">Details</button>
                                    <button @onclick="() => Edit(spreadsheet.SpreadsheetId)" class="btn btn-primary me-3">Edit</button>
                                    <button @onclick="() => CopySpreadsheet(spreadsheet.SpreadsheetId)" class="btn btn-primary">Create copy</button>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>
    </section>
</main>

@code {
    private IList<SpreadsheetMetadataDto> _spreadsheets;

    protected override async Task OnInitializedAsync()
    {
        _spreadsheets = await _spreadsheetMetadataProvider.GetSpreadsheets();
    }

    private void CopySpreadsheet(string id)
    {
        _uriHelper.NavigateTo($"/copy/{id}/{true}/");
    }

    private void Details(string id)
    {
        _uriHelper.NavigateTo($"/details/{id}/{true}");
    }

    private void Edit(string id)
    {
        _uriHelper.NavigateTo($"/edit/{id}");
    }

}